% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPAS.R
\name{getPAS}
\alias{getPAS}
\title{Progression Advance Score (PAS)}
\usage{
getPAS(segmentedRegression_out)
}
\arguments{
\item{segmentedRegression_out}{output from segmentedRegression()}
}
\value{
\item{PAS} {PAS over the whole timecourse. For each gene, it measures the different progression over the entire reliably aligned time points by aggregation of area difference in each segment (deviation from expection) and normalized by total aligned time length in query.}
\item{PASVector} {A vector containg PAS calcuated for each segment.}
}
\description{
This function calculates the progression difference between two temporally similar genes (query and Reference).
}
\examples{
data(simData)
data=simdata$Complex
gene=data$gene
query=data$query
timePoints_query=data$timePoints_query
reference=data$reference
timePoints_reference=data$timePoints_reference
alignment=dtw(query,reference)
dtw_results=list(alignment$index1,alignment$index2)
index_1=dtw_results[[1]]
index_2=dtw_results[[2]]
aligned_values_query=query[index_1]
aligned_values_reference=reference[index_2]
aligned_timePoints_query=timePoints_query[index_1]
aligned_timePoints_reference=timePoints_reference[index_2]
index_alignableRegion=alignableRegionIndex(aligned_timePoints_query,aligned_timePoints_reference)
alignableRegion_values_query=aligned_values_query[index_alignableRegion]
alignableRegion_values_reference=aligned_values_reference[index_alignableRegion]
alignableRegion_timePoints_query=aligned_timePoints_query[index_alignableRegion]
alignableRegion_timePoints_reference=aligned_timePoints_reference[index_alignableRegion]
percentageAlignmentQuery=percentageAlignment(timePoints_query,
               timePoints_reference,
               alignableRegion_timePoints_query,
               alignableRegion_timePoints_reference)['percentage_alignment_query']
percentageAlignmentReference=percentageAlignment(timePoints_query,
               timePoints_reference,
               alignableRegion_timePoints_query,
               alignableRegion_timePoints_reference)['percentage_alignment_reference']
Rho=spearmanCorrelation(alignableRegion_values_query,alignableRegion_values_reference)
pValueRho=getPValueRho(Rho,query,timePoints_query,reference,timePoints_reference)
alignableRegion_timePoints_query_merged=mergeReferencePoints(alignableRegion_timePoints_query,
               alignableRegion_timePoints_reference)["aligned_timePoints_query_merged"][[1]]
alignableRegion_timePoints_reference_merged=mergeReferencePoints(alignableRegion_timePoints_query,
               alignableRegion_timePoints_reference)["aligned_timePoints_reference_merged"][[1]]
segmentedRegression_out=segmentedRegression(alignableRegion_timePoints_query_merged,
               alignableRegion_timePoints_reference_merged)
breakPointsMatrix=fetchBreakPoints(segmentedRegression_out)
PAS=getPAS(segmentedRegression_out)$PAS
PASVector=getPAS(segmentedRegression_out)$PASVector

}
\author{
Peng Jiang \email{PJiang@morgridge.org}
}
